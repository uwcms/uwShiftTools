#!/usr/bin/env python
import argparse
import sys
from xml.dom import minidom as dom
from calol1.geometry import caloTower
import calol1.xml

try:
    import calol1.omds
except ImportError:
    pass


def main():
    parser = argparse.ArgumentParser(
        description='Reads L1 Calo Masks from OMDS'
    )
    subparsers = parser.add_subparsers(help='sub-command help', dest='action')
    createAction = subparsers.add_parser('create', help='Create new xml mask file')
    createAction.add_argument(
        '--linkmask',
        '-l',
        nargs='*',
        help='Add link mask(s) corresponding to tower(s) specified (e.g. E12,1)',
        type=caloTower.initFromString,
        metavar='tower'
    )
    createAction.add_argument(
        '--towermask',
        '-t',
        nargs='*',
        help='Add tower mask(s) corresponding to tower(s) specified (e.g. E12,1)',
        type=caloTower.initFromString,
        metavar='tower'
    )

    modifyAction = subparsers.add_parser('modify', help='Modify xml mask file')
    modifyAction.add_argument('file', type=argparse.FileType('r'))
    modifyAction.add_argument(
        '--linkmask',
        '-l',
        nargs='*',
        help='Add link mask(s) corresponding to tower(s) specified (e.g. E12,1)',
        type=caloTower.initFromString,
        metavar='tower'
    )
    modifyAction.add_argument(
        '--towermask',
        '-t',
        nargs='*',
        help='Add tower mask(s) corresponding to tower(s) specified (e.g. E12,1)',
        type=caloTower.initFromString,
        metavar='tower'
    )

    if 'calol1.omds' in sys.modules:
        listAction = subparsers.add_parser('list', help='List masks present in OMDS')
        listAction.add_argument('--limit', type=int, help='TODO! Limit number of keys returned')
        readAction = subparsers.add_parser('read', help='Read mask key and do things to it')
        readAction.add_argument('key')
        readAction.add_argument('--xml-only', action='store_true', help='Only print XML file, no key information')
        calol1.omds.connect()

    args = parser.parse_args()

    # Online-only actions
    if args.action == 'list':
        print 'Keys currently in CALOL1_RS table:'
        for key in calol1.omds.list_rs_keys():
            print key
        return
    if args.action == 'read':
        record = calol1.omds.get_rs_key(args.key)
        if not args.xml_only:
            print "Key:        ", record['id']
            print "Created on: ", record['creation_date'].strftime('%c')
            print "Created by: ", record['author']
            print "Description:", record['description']
            print
            document = dom.parseString(record['conf'].read())
            run_settings = calol1.xml.run_settings(document)
            print run_settings
        else:
            print record['conf']
        return
    # TODO: theoretically possible
    # if args.action == 'write':

    if args.action == 'modify':
        document = dom.parse(args.file)
    elif args.action == 'create':
        document = dom.Document()

    run_settings = calol1.xml.run_settings(document)

    if args.linkmask:
        for tower in args.linkmask:
            run_settings.addLinkMaskByTower(tower)

    if args.towermask:
        for tower in args.towermask:
            run_settings.addTowerMaskByTower(tower)

    document.writexml(sys.stdout, indent='', addindent='  ', newl='\n')


if __name__ == '__main__':
    main()

# vim: set ts=4 sw=4 tw=0 et :
